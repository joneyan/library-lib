<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="libBookborrowDao">
<resultMap id="libBookborrow" type="com.lib.model.LibBookborrow">

<result property="backTime" column="back_time" />
<result property="readerId" column="reader_id" />
<result property="stipulateTime" column="stipulate_time" />
<result property="id" column="id" />
<result property="bookId" column="book_id" />
<result property="borrowTime" column="borrow_time" />
<result property="operator" column="operator" />
<result property="status" column="status" /></resultMap>
<sql id="sql_insert_column_list">
<trim prefix="" prefixOverrides=",">

<if test="entity.backTime !=null and entity.backTime !=''">,back_time </if>

<if test="entity.readerId !=null and entity.readerId !=''">,reader_id </if>

<if test="entity.stipulateTime !=null and entity.stipulateTime !=''">,stipulate_time </if>

<if test="entity.id !=null and entity.id !=''">,id </if>

<if test="entity.bookId !=null and entity.bookId !=''">,book_id </if>

<if test="entity.borrowTime !=null and entity.borrowTime !=''">,borrow_time </if>

<if test="entity.operator !=null and entity.operator !=''">,operator </if>

<if test="entity.status !=null and entity.status !=''">,status </if>
</trim>
</sql>
<sql id="sql_insert_property_list">
<trim prefix="" prefixOverrides=",">

<if test="entity.backTime !=null and entity.backTime !=''">,#{entity.backTime} </if>

<if test="entity.readerId !=null and entity.readerId !=''">,#{entity.readerId} </if>

<if test="entity.stipulateTime !=null and entity.stipulateTime !=''">,#{entity.stipulateTime} </if>

<if test="entity.id !=null and entity.id !=''">,#{entity.id} </if>

<if test="entity.bookId !=null and entity.bookId !=''">,#{entity.bookId} </if>

<if test="entity.borrowTime !=null and entity.borrowTime !=''">,#{entity.borrowTime} </if>

<if test="entity.operator !=null and entity.operator !=''">,#{entity.operator} </if>

<if test="entity.status !=null and entity.status !=''">,#{entity.status} </if>
</trim>
</sql>
<sql id="sql_column_list">
<trim prefix="" prefixOverrides=",">,back_time
,reader_id
,stipulate_time
,id
,book_id
,borrow_time
,operator
,status
</trim></sql>
<sql id="sql_update_set">
<trim prefix="SET" prefixOverrides=",">
<if test="entity != null"><if test="entity.backTime !=null and entity.backTime !=''">,back_time = #{entity.backTime}</if>
<if test="entity.readerId !=null and entity.readerId !=''">,reader_id = #{entity.readerId}</if>
<if test="entity.stipulateTime !=null and entity.stipulateTime !=''">,stipulate_time = #{entity.stipulateTime}</if>
<if test="entity.id !=null and entity.id !=''">,id = #{entity.id}</if>
<if test="entity.bookId !=null and entity.bookId !=''">,book_id = #{entity.bookId}</if>
<if test="entity.borrowTime !=null and entity.borrowTime !=''">,borrow_time = #{entity.borrowTime}</if>
<if test="entity.operator !=null and entity.operator !=''">,operator = #{entity.operator}</if>
<if test="entity.status !=null and entity.status !=''">,status = #{entity.status}</if>
</if>
</trim>
</sql>
<sql id="sql_condition">
<if test="condition != null">
<if test="condition.backTime !=null and condition.backTime !=''"> AND back_time = #{condition.backTime}</if>
<if test="condition.readerId !=null and condition.readerId !=''"> AND reader_id = #{condition.readerId}</if>
<if test="condition.stipulateTime !=null and condition.stipulateTime !=''"> AND stipulate_time = #{condition.stipulateTime}</if>
<if test="condition.id !=null and condition.id !=''"> AND id = #{condition.id}</if>
<if test="condition.bookId !=null and condition.bookId !=''"> AND book_id = #{condition.bookId}</if>
<if test="condition.borrowTime !=null and condition.borrowTime !=''"> AND borrow_time = #{condition.borrowTime}</if>
<if test="condition.operator !=null and condition.operator !=''"> AND operator = #{condition.operator}</if>
<if test="condition.status !=null and condition.status !=''"> AND status = #{condition.status}</if>
</if>
</sql>
<sql id="sql_pagination_end">
<![CDATA[
limit ${startRow-1},#{limit}
]]>
</sql><sql id="sql_force_update_set">
<trim prefix="SET" prefixOverrides=",">
<if test="_parameter_containsKey('entity.backTime')">,back_time = #{entity.backTime}</if>
<if test="_parameter_containsKey('entity.readerId')">,reader_id = #{entity.readerId}</if>
<if test="_parameter_containsKey('entity.stipulateTime')">,stipulate_time = #{entity.stipulateTime}</if>
<if test="_parameter_containsKey('entity.id')">,id = #{entity.id}</if>
<if test="_parameter_containsKey('entity.bookId')">,book_id = #{entity.bookId}</if>
<if test="_parameter_containsKey('entity.borrowTime')">,borrow_time = #{entity.borrowTime}</if>
<if test="_parameter_containsKey('entity.operator')">,operator = #{entity.operator}</if>
<if test="_parameter_containsKey('entity.status')">,status = #{entity.status}</if>
</trim>
</sql>
<insert id="insert" parameterType="java.util.Map">
INSERT INTO lib_bookborrow (
<include refid="sql_insert_column_list" />
) VALUES (
<include refid="sql_insert_property_list" />
)
</insert>
<select id="get" parameterType="java.util.Map" resultMap="libBookborrow">
SELECT
<include refid="sql_column_list" />
FROM lib_bookborrow
<trim prefix="WHERE" prefixOverrides="AND">
<include refid="sql_condition" />
</trim>
</select>
<select id="getById" parameterType="java.util.Map" resultMap="libBookborrow">
SELECT
<include refid="sql_column_list" />
FROM lib_bookborrow
WHERE id = #{id}
</select>
<select id="find" parameterType="java.util.Map" resultMap="libBookborrow">
SELECT
<include refid="sql_column_list" />
FROM lib_bookborrow
<trim prefix="WHERE" prefixOverrides="AND">
<include refid="sql_condition" />
</trim>
<if test="orderBy != null">
ORDER BY ${orderBy}
</if>
<if test="offset != null">
<include refid="sql_pagination_end" />
</if>
</select>
<select id="findByIdList" parameterType="java.util.Map" resultMap="libBookborrow">
SELECT
<include refid="sql_column_list" />
 FROM lib_bookborrow
WHERE id IN
<foreach collection="idList" item="id" open="(" separator="," close=")">
#{id}
</foreach>
<include refid="sql_condition" />
<if test="orderBy != null">
ORDER BY ${orderBy}
</if>
</select>
<select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
SELECT count(${count_column}) AS count_ FROM lib_bookborrow
<trim prefix="WHERE" prefixOverrides="AND">
<include refid="sql_condition" />
</trim>
</select>
<select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
SELECT ${aggregate_sql} FROM lib_bookborrow
<trim prefix="WHERE" prefixOverrides="AND">
<include refid="sql_condition" />
</trim>
</select>
<update id="update" parameterType="java.util.Map">
UPDATE lib_bookborrow
<include refid="sql_update_set" />
<trim prefix="WHERE" prefixOverrides="AND">
<include refid="sql_condition" />
</trim>
</update>
<update id="updateById" parameterType="java.util.Map">
UPDATE lib_bookborrow
<include refid="sql_update_set" />
WHERE id = #{id}
</update>
<update id="updateByIdList" parameterType="java.util.Map">
UPDATE lib_bookborrow
<include refid="sql_update_set" />
WHERE id IN
<foreach collection="idList" item="id" open="(" separator="," close=")">
#{id}
</foreach>
<include refid="sql_condition" />
</update>
<update id="forceUpdate" parameterType="java.util.Map">
UPDATE lib_bookborrow
<include refid="sql_force_update_set" />
<trim prefix="WHERE" prefixOverrides="AND">
<include refid="sql_condition" />
</trim>
</update>
<update id="forceUpdateById" parameterType="java.util.Map">
UPDATE lib_bookborrow
<include refid="sql_force_update_set" />
WHERE id = #{id}
</update>
<update id="forceUpdateByIdList" parameterType="java.util.Map">
UPDATE lib_bookborrow
<include refid="sql_force_update_set" />
WHERE id IN
<foreach collection="idList" item="id" open="(" separator="," close=")">
#{id}
</foreach>
<include refid="sql_condition" />
</update>
<delete id="remove" parameterType="java.util.Map">
DELETE FROM lib_bookborrow
<trim prefix="WHERE" prefixOverrides="AND">
<include refid="sql_condition" />
</trim>
</delete>
<delete id="removeById" parameterType="java.util.Map">
DELETE FROM lib_bookborrow
WHERE id = #{id}
</delete>
<delete id="removeByIdList" parameterType="java.util.Map">
DELETE FROM lib_bookborrow
WHERE id IN
<foreach collection="idList" item="id" open="(" separator="," close=")">
#{id}
</foreach>
<include refid="sql_condition" />
</delete>

</mapper>
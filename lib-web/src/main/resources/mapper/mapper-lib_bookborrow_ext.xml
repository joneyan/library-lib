<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="libBookborrowDao_EXT">
<resultMap id="LibBookborrowVO" type="com.lib.model.vo.LibBookborrowVO">

<result property="backTime" column="back_time" />
<result property="readerId" column="reader_id" />
<result property="stipulateTime" column="stipulate_time" />
<result property="id" column="id" />
<result property="bookId" column="book_id" />
<result property="borrowTime" column="borrow_time" />
<result property="operator" column="operator" />
<result property="status" column="status" /></resultMap>
<sql id="sql_insert_column_list">
<trim prefix="" prefixOverrides=",">

<if test="entity.backTime !=null">,back_time </if>

<if test="entity.readerId !=null and entity.readerId !=''">,reader_id </if>

<if test="entity.stipulateTime !=null">,stipulate_time </if>

<if test="entity.id !=null and entity.id !=''">,id </if>

<if test="entity.bookId !=null and entity.bookId !=''">,book_id </if>

<if test="entity.borrowTime !=null">,borrow_time </if>

<if test="entity.operator !=null and entity.operator !=''">,operator </if>

<if test="entity.status !=null and entity.status !=''">,status </if>
</trim>
</sql>
<sql id="sql_insert_property_list">
<trim prefix="" prefixOverrides=",">

<if test="entity.backTime !=null">,#{entity.backTime} </if>

<if test="entity.readerId !=null and entity.readerId !=''">,#{entity.readerId} </if>

<if test="entity.stipulateTime !=null">,#{entity.stipulateTime} </if>

<if test="entity.id !=null and entity.id !=''">,#{entity.id} </if>

<if test="entity.bookId !=null and entity.bookId !=''">,#{entity.bookId} </if>

<if test="entity.borrowTime !=null">,#{entity.borrowTime} </if>

<if test="entity.operator !=null and entity.operator !=''">,#{entity.operator} </if>

<if test="entity.status !=null and entity.status !=''">,#{entity.status} </if>
</trim>
</sql>
<sql id="sql_column_list">
lbbr.back_time,
lbbr.reader_id,
lbbr.stipulate_time,
lbbr.id AS  id,
lbbr.book_id,
borrow_time,
lbbr.operator,
lbbr.status
</sql>
<sql id="sql_update_set">
<trim prefix="SET" prefixOverrides=",">
<if test="entity != null"><if test="entity.backTime !=null">,back_time = #{entity.backTime}</if>
<if test="entity.readerId !=null and entity.readerId !=''">,reader_id = #{entity.readerId}</if>
<if test="entity.stipulateTime !=null">,stipulate_time = #{entity.stipulateTime}</if>
<if test="entity.id !=null and entity.id !=''">,id = #{entity.id}</if>
<if test="entity.bookId !=null and entity.bookId !=''">,book_id = #{entity.bookId}</if>
<if test="entity.borrowTime !=null">,borrow_time = #{entity.borrowTime}</if>
<if test="entity.operator !=null and entity.operator !=''">,operator = #{entity.operator}</if>
<if test="entity.status !=null and entity.status !=''">,status = #{entity.status}</if>
</if>
</trim>
</sql>
<sql id="sql_condition">
<if test="condition != null">
<if test="condition.backTime !=null '"> AND back_time = #{condition.backTime}</if>
<if test="condition.readerId !=null and condition.readerId !=''"> AND reader_id = #{condition.readerId}</if>
<if test="condition.stipulateTime !=null"> AND stipulate_time = #{condition.stipulateTime}</if>
<if test="condition.id !=null and condition.id !=''"> AND id = #{condition.id}</if>
<if test="condition.bookId !=null and condition.bookId !=''"> AND book_id = #{condition.bookId}</if>
<if test="condition.borrowTime !=null"> AND borrow_time = #{condition.borrowTime}</if>
<if test="condition.operator !=null and condition.operator !=''"> AND operator = #{condition.operator}</if>
<if test="condition.status !=null and condition.status !=''"> AND status = #{condition.status}</if>
</if>
</sql>
<sql id="sql_pagination_end">
<![CDATA[
limit ${startRow-1},#{limit}
]]>
</sql><sql id="sql_force_update_set">
<trim prefix="SET" prefixOverrides=",">
<if test="_parameter_containsKey('entity.backTime')">,back_time = #{entity.backTime}</if>
<if test="_parameter_containsKey('entity.readerId')">,reader_id = #{entity.readerId}</if>
<if test="_parameter_containsKey('entity.stipulateTime')">,stipulate_time = #{entity.stipulateTime}</if>
<if test="_parameter_containsKey('entity.id')">,id = #{entity.id}</if>
<if test="_parameter_containsKey('entity.bookId')">,book_id = #{entity.bookId}</if>
<if test="_parameter_containsKey('entity.borrowTime')">,borrow_time = #{entity.borrowTime}</if>
<if test="_parameter_containsKey('entity.operator')">,operator = #{entity.operator}</if>
<if test="_parameter_containsKey('entity.status')">,status = #{entity.status}</if>
</trim>
</sql>
    <select id="gethaveBorrowList" parameterType="java.util.Map" resultMap="LibBookborrowVO">
        SELECT
        <include refid="sql_column_list"/>
        ,lbmn.username AS manaName
        ,lbif.bookname AS bookname
        ,lbr.name AS readerName
        FROM lib_bookborrow lbbr
        LEFT JOIN lib_manager lbmn ON lbmn.id=lbbr.operator
        LEFT JOIN lib_bookinfo lbif ON lbif.id=lbbr.book_id
        LEFT JOIN lib_reader lbr ON lbr.id=lbbr.reader_id
        <if test="name!=null and name !=''">
            WHERE exists (SELECT  1 FROM lib_reader lbr1 WHERE lbr1.name LIKE '${name}%')
        </if>
        limit #{start},#{end}
    </select>
    <select id="gethaveBorrowCount" parameterType="java.util.Map" resultMap="LibBookborrowVO">
        SELECT
        <include refid="sql_column_list"/>
        ,lbmn.username AS manaName
        ,lbif.bookname AS bookname
        ,lbr.name AS readerName
        FROM lib_bookborrow lbbr
        LEFT JOIN lib_manager lbmn ON lbmn.id=lbbr.operator
        LEFT JOIN lib_bookinfo lbif ON lbif.id=lbbr.book_id
        LEFT JOIN lib_reader lbr ON lbr.id=lbbr.reader_id
        <if test="name!=null and name !=''">
            WHERE exists (SELECT  1 FROM lib_reader lbr1 WHERE lbr1.name LIKE '${name}%')
        </if>
    </select>
</mapper>